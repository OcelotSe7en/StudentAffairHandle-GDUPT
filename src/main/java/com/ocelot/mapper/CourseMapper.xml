<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- classtable -->
<mapper namespace="com.ocelot.mapper.CourseMapper">
    <!-- 字段映射 -->
    <resultMap id="courseMap" type="com.ocelot.model.Course">
        <result column="courseName" property="courseName" jdbcType="VARCHAR" />
        <result column="courseTeacher" property="courseTeacher" jdbcType="VARCHAR" />
        <result column="courseLocation" property="courseLocation" jdbcType="VARCHAR" />
        <result column="courseWeekDay" property="courseWeekDay" jdbcType="VARCHAR" />
        <result column="courseClass" property="courseClass" jdbcType="VARCHAR" />
        <result column="courseWeek" property="courseWeek" jdbcType="VARCHAR" />
        <result column="courseSchoolYear" property="courseSchoolYear" jdbcType="VARCHAR" />
        <result column="studentId" property="studentId" jdbcType="VARCHAR" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        c.id, c.courseName, c.courseTeacher, c.courseLocation, c.courseWeekDay, c.courseClass, c.courseWeek, c.courseSchoolYear,
        c.studentId
    </sql>
    <!-- This code was generated by TableGo tools, mark 1 end. -->

    <!-- 根据条件参数查询列表 -->
    <select id="selectCourseTableByCondition" resultMap="courseMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM classtable c WHERE 1 = 1
        <if test="courseName != null and courseName != ''">
            AND c.courseName LIKE CONCAT('%', #{courseName}, '%')
        </if>
        <if test="courseTeacher != null and courseTeacher != ''">
            AND c.courseTeacher LIKE CONCAT('%', #{courseTeacher}, '%')
        </if>
        <if test="courseLocation != null and courseLocation != ''">
            AND c.courseLocation LIKE CONCAT('%', #{courseLocation}, '%')
        </if>
        <if test="courseWeekDay != null and courseWeekDay != ''">
            AND c.courseWeekDay LIKE CONCAT('%', #{courseWeekDay}, '%')
        </if>
        <if test="courseClass != null and courseClass != ''">
            AND c.courseClass LIKE CONCAT('%', #{courseClass}, '%')
        </if>
        <if test="courseWeek != null and courseWeek != ''">
            AND c.courseWeek LIKE CONCAT('%', #{courseWeek}, '%')
        </if>
        <if test="courseSchoolYear != null and courseSchoolYear != ''">
            AND c.courseSchoolYear LIKE CONCAT('%', #{courseSchoolYear}, '%')
        </if>
        <if test="studentId != null and studentId != ''">
            AND c.studentId LIKE CONCAT('%', #{studentId}, '%')
        </if>
    </select>
    <!-- 查询用户的课表 -->
    <select id="selectCourseTable" resultMap="courseMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM classtable c WHERE 1 = 1
        <if test="studentId != null and studentId != ''">
            AND c.studentId LIKE CONCAT('%', #{studentId}, '%')
        </if>
        <if test="courseSchoolYear != null and courseSchoolYear != ''">
            AND c.courseSchoolYear LIKE CONCAT('%', #{courseSchoolYear}, '%')
        </if>
    </select>

    <!-- 新增信息 -->
    <insert id="addClasstable">
        INSERT INTO classtable (
            courseName, courseTeacher, courseLocation, courseWeekDay, courseClass, courseWeek, courseSchoolYear,
            studentId
        ) VALUES (
                     #{courseName},
                     #{courseTeacher},
                     #{courseLocation},
                     #{courseWeekDay},
                     #{courseClass},
                     #{courseWeek},
                     #{courseSchoolYear},
                     #{studentId}
                 )
    </insert>

    <!-- 批量新增信息 -->
    <insert id="addClasstables" parameterType="list">
        INSERT INTO classtable (
        courseName, courseTeacher, courseLocation, courseWeekDay, courseClass, courseWeek, courseSchoolYear,
        studentId
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.courseName},
            #{item.courseTeacher},
            #{item.courseLocation},
            #{item.courseWeekDay},
            #{item.courseClass},
            #{item.courseWeek},
            #{item.courseSchoolYear},
            #{item.studentId}
            )
        </foreach>
    </insert>

</mapper>