<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- examination -->
<mapper namespace="com.ocelot.mapper.ExaminationMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="examinationMap" type="com.ocelot.model.Examination">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="student_id" property="studentId" jdbcType="BIGINT" />
        <result column="exam_year_and_term" property="examYearAndTerm" jdbcType="VARCHAR" />
        <result column="exam_course_number" property="examCourseNumber" jdbcType="INTEGER" />
        <result column="exam_course_name" property="examCourseName" jdbcType="VARCHAR" />
        <result column="exam_result" property="examResult" jdbcType="INTEGER" />
        <result column="exam_point" property="examPoint" jdbcType="VARCHAR" />
        <result column="exam_credit" property="examCredit" jdbcType="VARCHAR" />
        <result column="exam_result_number" property="examResultNumber" jdbcType="INTEGER" />
        <result column="exam_type" property="examType" jdbcType="VARCHAR" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->

    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        e.id, e.student_id, e.exam_year_and_term, e.exam_course_number, e.exam_course_name, e.exam_result, e.exam_point, e.exam_credit, 
        e.exam_result_number, e.exam_type
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->

    <!-- 根据条件参数查询列表 -->
    <select id="findExaminationByCondition" resultMap="examinationMap" parameterType="map">
        SELECT
            <include refid="allColumns" />
        FROM examination e
        <where>
            <if test="studentId != null">
                AND e.student_id = #{studentId}
            </if>
            <if test="examYearAndTerm != null and examYearAndTerm != ''">
                AND e.exam_year_and_term = #{examYearAndTerm}
            </if>
            <if test="examCourseNumber != null">
                AND e.exam_course_number = #{examCourseNumber}
            </if>
        </where>

    </select>

    <!-- 批量新增信息 -->
    <insert id="addMultiExamination" parameterType="list">
        INSERT INTO examination (
            student_id, exam_year_and_term, exam_course_number, exam_course_name, exam_result, exam_point, exam_credit,
            exam_result_number, exam_type
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.studentId},
                #{item.examYearAndTerm},
                #{item.examCourseNumber},
                #{item.examCourseName},
                #{item.examResult},
                #{item.examPoint},
                #{item.examCredit},
                #{item.examResultNumber},
                #{item.examType}
            )
        </foreach>
    </insert>

    <!-- 批量修改信息 -->
    <update id="updateMultiExamination" parameterType="list">
        <foreach collection="list" index="index" item="item" open="" close="" separator=";">
            UPDATE examination
            <set>
                <if test="item.examYearAndTerm != null">
                    exam_year_and_term = #{item.examYearAndTerm},
                </if>
                <if test="item.examCourseNumber != null">
                    exam_course_number = #{item.examCourseNumber},
                </if>
                <if test="item.examCourseName != null">
                    exam_course_name = #{item.examCourseName},
                </if>
                <if test="item.examResult != null">
                    exam_result = #{item.examResult},
                </if>
                <if test="item.examPoint != null">
                    exam_point = #{item.examPoint},
                </if>
                <if test="item.examCredit != null">
                    exam_credit = #{item.examCredit},
                </if>
                <if test="item.examType != null">
                    exam_type = #{item.examType}
                </if>
            </set>
            WHERE student_id = #{item.studentId}
            AND exam_result_number = #{item.examResultNumber}
        </foreach>
    </update>

    <!-- 根据主键批量删除 -->
    <delete id="deleteMultiExamination" parameterType="list">
        DELETE FROM examination WHERE student_id IN
        <foreach collection="list" index="index" item="studentId" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>
</mapper>